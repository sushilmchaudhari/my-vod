Description: 'MSRI VOD - CreateGuid Workflow'

Mappings:
  SourceCode:
    General:
      S3Bucket: cf-templates-16eosvi5y0jgh-us-west-1      

Resources:

# IAM Role for Lambda Function
  CreateGuidRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        -
          PolicyName: !Sub "${AWS::StackName}-createguid-lambda-role"
          PolicyDocument:
            Statement:
              -
                Effect: Allow
                Action:
                  - s3:PutBucketNotification
                Resource:
                  - !Join ["", ["arn:aws:s3:::", Ref: "UploadBucket", "/*" ]]
                  - !Join ["", ["arn:aws:s3:::", Ref: "UploadBucket" ]]
              -
                Effect: Allow
                Action:
                  - dynamodb:UpdateItem
                Resource:
                  - !Join ["", ["arn:aws:dynamodb:", Ref: "AWS::Region", ":", Ref: "AWS::AccountId", ":table/",Ref: "DynamoDBTable"]]
              -
                Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource:
                  - !Join ["", ["arn:aws:logs:", Ref: "AWS::Region", ":", Ref: "AWS::AccountId", ":log-group:/aws/lambda/*"]]

# IAM Role for Custom Lmabda Function
  CustomResourceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/"
      Policies:
        -
          PolicyName: !Sub "${AWS::StackName}-custom-resource"
          PolicyDocument:
            Statement:
              -
                Effect: Allow
                Action:
                  - iam:PassRole
                Resource:
                  - !Join ["", ["arn:aws:iam::", Ref: "AWS::AccountId", ":role/*"]]
              -
                Effect: Allow
                Action:
                  - states:CreateStateMachine
                  - states:DeleteStateMachine
                Resource:
                  - !Join ["", ["arn:aws:states:", Ref: "AWS::Region", ":", Ref: "AWS::AccountId", ":*"]]
              -
                Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource:
                  - !Join ["", ["arn:aws:logs:", Ref: "AWS::Region", ":", Ref: "AWS::AccountId", ":log-group:/aws/lambda/*"]]
              -
                Effect: Allow
                Action:
                  - lambda:UpdateFunctionConfiguration
                Resource:
                  - !Join ["", ["arn:aws:lambda:", Ref: "AWS::Region", ":", Ref: "AWS::AccountId", ":", "function:*" ]]
              -
                Effect: Allow
                Action:
                  - s3:PutBucketNotification
                  - s3:PutObject
                Resource:
                  - !Join ["", ["arn:aws:s3:::", Ref: "UploadBucket", "/*" ]]
                  - !Join ["", ["arn:aws:s3:::", Ref: "UploadBucket" ]]
              -
                Effect: Allow
                Action:
                  - cloudfront:CreateCloudFrontOriginAccessIdentity
                  - cloudfront:DeleteCloudFrontOriginAccessIdentity
                Resource: "*"
              -
                Effect: Allow
                Action:
                  - mediaconvert:CreatePreset
                  - mediaconvert:DescribeEndpoints
                Resource:
                  - !Join ["", ["arn:aws:mediaconvert:", Ref: "AWS::Region", ":", Ref: "AWS::AccountId", ":*"]]

# S3 bucket Invoke Function permission
  S3LambdaInvokeVideo:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt CreateGuid.Arn
      Action: lambda:InvokeFunction
      Principal: s3.amazonaws.com
      SourceAccount: !Ref AWS::AccountId

# S3 Bucket
  UploadBucket:
    Type: AWS::S3::Bucket
    
# DynamoDB table creation
  DynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
      - AttributeName: guid
        AttributeType: S
      KeySchema:
      - AttributeName: guid
        KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: '5'
        WriteCapacityUnits: '5'
      TableName: !Ref AWS::StackName

# Lambda Function
  CreateGuid:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub "${AWS::StackName}-createguid"
      Description: Create uniuqe id (guid) of every video uploaded to uploadBucket
      Handler: index.handler
      Role: !GetAtt CreateGuidRole.Arn
      Code:
        S3Bucket: !FindInMap ["SourceCode", "General", "S3Bucket"]
        S3Key: createguid.zip
      Runtime: nodejs6.10
      Timeout: 120
      Environment:
        Variables:
          DynamoDBTable: !Ref DynamoDBTable
  
# Custom Resource for S3 notification
  UploadConfig:
    Type: Custom::S3
    Properties:
      ServiceToken: !GetAtt CustomResource.Arn
      Source: !Ref UploadBucket
      IngestArn: !GetAtt CreateGuid.Arn
      Resource: S3Notification
      WorkflowTrigger: "SourceVideo"

#Custom Resource Lambda Function
  CustomResource:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-deploy-custom-resources
      Description: Used to deploy ETS, Step Functions and additional, cloudfront s3 and sns Configuration
      Handler: index.handler
      Role: !GetAtt CustomResourceRole.Arn
      Code:
        S3Bucket: !FindInMap ["SourceCode", "General", "S3Bucket"]
        S3Key: custom-resources.zip
      Runtime:  nodejs6.10
      Timeout: 180


Outputs:
  UploadBucket:
    Description: Upload Bucket
    Value: !Ref UploadBucket

  DynamoDBName:
    Description: Dynamo DB Table Name
    Value: !Ref DynamoDBTable
